<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <!-- SEO Meta Tags -->
    <title>Imagination 🎭 - Real-time AI Text-to-Image Generator</title>
    <meta name="description" content="Imagination 🎭 - Apne shabdon ko tasveeron mein badlein! Hamare free AI text-to-image generator se creative aur unique images banayein. Bas apna prompt likhein aur jaadoo dekhein.">
    <meta name="keywords" content="ai image generator, text to image, ai art, stable diffusion, free ai generator, imagination, ai model, creative images, text se photo banaye, एआई इमेज जेनरेटर">
    <meta name="author" content="Imagination AI">

    <!-- Google Fonts & Icons -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        /* CSS Styling Starts Here */
        :root {
            --primary-color: #9b59b6;
            --secondary-color: #8e44ad;
            --background-color: #121212;
            --surface-color: #1e1e1e;
            --text-color: #e0e0e0;
            --glow-color: #c38ded;
        }

        * { margin: 0; padding: 0; box-sizing: border-box; }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #1f1c2c 0%, #121212 100%);
            color: var(--text-color);
            line-height: 1.6;
            overflow-x: hidden;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .container { width: 90%; max-width: 900px; margin: 0 auto; padding: 20px; }

        /* Header & Real-time Menu Styling */
        header {
            padding: 15px 0;
            background: rgba(30, 30, 30, 0.5);
            backdrop-filter: blur(10px);
            position: sticky; top: 0; z-index: 1000;
            transition: background-color 0.3s, box-shadow 0.3s;
        }
        
        header.scrolled {
            background: rgba(18, 18, 18, 0.8);
            box-shadow: 0 2px 10px rgba(0,0,0,0.3);
        }

        .header-content { display: flex; align-items: center; justify-content: space-between; }

        .logo { display: flex; align-items: center; gap: 15px; }

        .magic-stick-icon {
            font-size: 2.2rem; color: var(--primary-color);
            animation: magic-glow 3s infinite ease-in-out;
        }

        @keyframes magic-glow {
            0%, 100% { transform: rotate(-15deg) scale(1); text-shadow: 0 0 5px var(--glow-color), 0 0 10px var(--glow-color); }
            50% { transform: rotate(15deg) scale(1.1); text-shadow: 0 0 15px var(--glow-color), 0 0 25px var(--glow-color); }
        }

        .logo h1 { font-size: 1.8rem; font-weight: 700; background: linear-gradient(45deg, var(--primary-color), var(--glow-color)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; }

        /* Navigation Menu */
        nav ul { list-style: none; display: flex; gap: 25px; }
        nav a { color: var(--text-color); text-decoration: none; font-weight: 400; padding: 5px 10px; border-radius: 5px; transition: background-color 0.3s, color 0.3s; }
        nav a:hover { background-color: var(--primary-color); color: white; }

        .menu-toggle { display: none; background: none; border: none; color: white; font-size: 1.5rem; cursor: pointer; }

        /* Main Content */
        main { flex-grow: 1; text-align: center; padding-top: 40px; }
        main h2 { font-size: 1.5rem; margin-bottom: 10px; }
        main p { color: #b0b0b0; margin-bottom: 30px; max-width: 600px; margin-left: auto; margin-right: auto; }
        
        .ad-placeholder { width: 100%; max-width: 728px; height: 90px; background: var(--surface-color); border: 2px dashed #444; display: flex; justify-content: center; align-items: center; margin: 20px auto; color: #666; font-size: 0.9rem; border-radius: 8px; }

        #image-form { display: flex; flex-direction: column; gap: 20px; max-width: 700px; margin: 0 auto; }
        .input-group { display: flex; flex-direction: column; gap: 20px; }
        #prompt-input, #model-select { width: 100%; padding: 15px; font-size: 1rem; background-color: var(--surface-color); border: 1px solid #444; border-radius: 8px; color: var(--text-color); font-family: 'Poppins', sans-serif; transition: border-color 0.3s, box-shadow 0.3s; }
        #prompt-input { resize: vertical; min-height: 120px; }
        #prompt-input:focus, #model-select:focus { outline: none; border-color: var(--primary-color); box-shadow: 0 0 10px rgba(155, 89, 182, 0.5); }
        #generate-btn { padding: 15px 30px; font-size: 1.1rem; font-weight: 600; color: #fff; background: linear-gradient(45deg, var(--primary-color), var(--secondary-color)); border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; display: flex; align-items: center; justify-content: center; gap: 10px; }
        #generate-btn:hover:not(:disabled) { transform: translateY(-3px); box-shadow: 0 10px 20px rgba(155, 89, 182, 0.3); }
        #generate-btn:disabled { background: #555; cursor: not-allowed; opacity: 0.7; }
        .spinner { width: 20px; height: 20px; border: 3px solid rgba(255, 255, 255, 0.3); border-top-color: #fff; border-radius: 50%; animation: spin 1s linear infinite; display: none; }
        #generate-btn.loading .spinner { display: inline-block; }
        @keyframes spin { to { transform: rotate(360deg); } }

        /* Status and Gallery */
        #status-message { min-height: 24px; margin-top: 20px; color: var(--glow-color); font-weight: 300; }
        #gallery-section { margin-top: 20px; }
        #gallery-section h3 { margin-bottom: 20px; font-size: 1.3rem; }
        #gallery-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 15px; }
        #gallery-grid img { width: 100%; height: 100%; object-fit: cover; border-radius: 8px; cursor: pointer; transition: transform 0.3s, box-shadow 0.3s; }
        #gallery-grid img:hover { transform: scale(1.05); box-shadow: 0 8px 25px rgba(155, 89, 182, 0.4); }
        .gallery-placeholder { color: #888; grid-column: 1 / -1; }

        /* Image Modal Viewer */
        .modal { display: none; position: fixed; z-index: 2000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.9); justify-content: center; align-items: center; }
        .modal-content { max-width: 90%; max-height: 90%; animation: zoomIn 0.3s ease; }
        @keyframes zoomIn { from { transform: scale(0); } to { transform: scale(1); } }
        .close-modal { position: absolute; top: 20px; right: 35px; color: #f1f1f1; font-size: 40px; font-weight: bold; cursor: pointer; transition: color 0.3s; }
        .close-modal:hover { color: var(--primary-color); }
        
        /* Footer */
        footer { margin-top: auto; padding: 20px 0; text-align: center; border-top: 1px solid rgba(255, 255, 255, 0.1); background: #1e1e1e; }
        footer p { color: #aaa; font-size: 0.9rem; }

        /* Responsive Design for Menu */
        @media (max-width: 768px) {
            .logo h1 { font-size: 1.5rem; }
            .menu-toggle { display: block; }
            nav { position: fixed; top: 0; right: 0; width: 250px; height: 100vh; background: var(--surface-color); transform: translateX(100%); transition: transform 0.3s ease-in-out; }
            nav.active { transform: translateX(0); }
            nav ul { flex-direction: column; padding: 80px 20px; align-items: center; gap: 20px; }
            .input-group { flex-direction: column; }
            #model-select { width: 100%; }
        }
    </style>
</head>
<body>

    <header id="main-header">
        <div class="container header-content">
            <div class="logo">
                <i class="fas fa-magic-wand-sparkles magic-stick-icon"></i>
                <h1>Imagination 🎭</h1>
            </div>
            <nav id="main-nav">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="#">Gallery</a></li>
                    <li><a href="#">About</a></li>
                </ul>
            </nav>
            <button class="menu-toggle" id="menu-toggle-btn" aria-label="Open Menu">
                <i class="fas fa-bars"></i>
            </button>
        </div>
    </header>

    <main class="container">
        <h2>Apne imagination ko Jaadui Tasveeron mein Badlein</h2>
        <p>Neeche diye gaye box mein kuch bhi likhein aur dekhein AI aapke liye kya banata hai. Alag-alag results ke liye different models try karein!</p>

        <div class="ad-placeholder">
            <!-- PLEASE ENTER YOUR ADSTERRA BANNER ADS SCRIPT HERE (728x90) -->
            Adsterra Banner Ad <script type="text/javascript">
	atOptions = {
		'key' : 'a6b3c5c6db1c69e5797e696981621a02',
		'format' : 'iframe',
		'height' : 90,
		'width' : 728,
		'params' : {}
	};
</script>
<script type="text/javascript" src="//www.highperformanceformat.com/a6b3c5c6db1c69e5797e696981621a02/invoke.js"></script> (728x90)
        </div>

        <form id="image-form">
            <div class="input-group">
                <select id="model-select" name="model"></select>
                <textarea id="prompt-input" name="prompt" placeholder="Yahan apna prompt likhein... jaise 'a majestic lion wearing a crown on a mountain'" required></textarea>
            </div>
            <button type="submit" id="generate-btn">
                <span class="spinner"></span>
                <span class="btn-text">Generate Image</span>
            </button>
        </form>

        <div id="status-message"></div>

        <section id="gallery-section">
            <h3>Aapki Creations</h3>
            <div id="gallery-grid">
                <p class="gallery-placeholder">Aapki images yahan gallery mein dikhengi...</p>
            </div>
        </section>
    </main>

    <footer id="main-footer">
        <div class="container">
            <div class="ad-placeholder">
                <!-- PLEASE ENTER YOUR ADSTERRA BANNER ADS SCRIPT HERE (728x90 or other) -->
                 Adsterra Banner Ad <script type="text/javascript">
	atOptions = {
		'key' : 'c28dc9a324f558b64f3253e26f698bd1',
		'format' : 'iframe',
		'height' : 50,
		'width' : 320,
		'params' : {}
	};
</script>
<script type="text/javascript" src="//www.highperformanceformat.com/c28dc9a324f558b64f3253e26f698bd1/invoke.js"></script> (Footer)
            </div>
            <p>© 2024 Imagination 🎭. All Rights Reserved.</p>
        </div>
    </footer>

    <!-- Image Modal -->
    <div id="image-modal" class="modal">
        <span class="close-modal" id="close-modal-btn">×</span>
        <img class="modal-content" id="modal-img">
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // ===================================================================
        // !!! IMPORTANT SECURITY WARNING / ज़रूरी सुरक्षा चेतावनी !!!
        // ===================================================================
        // API keys ko public code me na dalein. Production ke liye,
        // API keys ko hamesha server-side (backend) par rakhein.
        const HUGGING_FACE_API_TOKEN = "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";

        const models = [
            { id: "stabilityai/stable-diffusion-xl-base-1.0", name: "Stable Diffusion XL (High Quality)" },
            { id: "runwayml/stable-diffusion-v1-5", name: "Stable Diffusion 1.5 (Fast)" },
            { id: "prompthero/openjourney", name: "OpenJourney (Artistic)" },
            { id: "SG161222/Realistic_Vision_V5.1_noVAE", name: "Realistic Vision 5.1 (Photorealistic)"},
            { id: "gsdf/Counterfeit-V2.5", name: "Counterfeit-2.5 (Anime Style)"}
        ];

        // DOM Elements
        const form = document.getElementById('image-form');
        const promptInput = document.getElementById('prompt-input');
        const modelSelect = document.getElementById('model-select');
        const generateBtn = document.getElementById('generate-btn');
        const btnText = document.querySelector('.btn-text');
        const statusMessage = document.getElementById('status-message');
        const galleryGrid = document.getElementById('gallery-grid');
        const galleryPlaceholder = document.querySelector('.gallery-placeholder');
        
        // Menu Elements
        const header = document.getElementById('main-header');
        const menuToggleBtn = document.getElementById('menu-toggle-btn');
        const mainNav = document.getElementById('main-nav');
        
        // Modal Elements
        const modal = document.getElementById('image-modal');
        const modalImg = document.getElementById('modal-img');
        const closeModalBtn = document.getElementById('close-modal-btn');

        // --- REAL-TIME UI LOGIC ---

        // Responsive Menu Toggle
        menuToggleBtn.addEventListener('click', () => {
            mainNav.classList.toggle('active');
        });

        // Header scroll effect
        window.addEventListener('scroll', () => {
            if (window.scrollY > 50) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        });
        
        // Image Modal Logic
        galleryGrid.addEventListener('click', (e) => {
            if (e.target.tagName === 'IMG') {
                modal.style.display = 'flex';
                modalImg.src = e.target.src;
            }
        });
        closeModalBtn.addEventListener('click', () => modal.style.display = 'none');
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                 modal.style.display = 'none';
            }
        });


        // --- CORE MODEL LOGIC ---

        // Populate model dropdown
        models.forEach(model => {
            const option = document.createElement('option');
            option.value = model.id;
            option.textContent = model.name;
            modelSelect.appendChild(option);
        });

        // Form submission handler
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const prompt = promptInput.value.trim();
            const selectedModelId = modelSelect.value;
            
            if (prompt) {
                // Start generation process with auto-retry
                generateImageWithRetry(prompt, selectedModelId);
            } else {
                updateStatus("Please enter a prompt.", true);
            }
        });

        // Main function to generate image with auto-retry logic
        async function generateImageWithRetry(prompt, modelId, retries = 3) {
            setLoading(true);
            updateStatus("Apki request bhej di gayi hai...", false);

            try {
                const response = await fetch(
                    `https://api-inference.huggingface.co/models/${modelId}`,
                    {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${HUGGING_FACE_API_TOKEN}`
                        },
                        body: JSON.stringify({ inputs: prompt })
                    }
                );

                if (!response.ok) {
                    const errorData = await response.json();
                    // THIS IS THE KEY "REAL-TIME" PART: Handling model loading error
                    if (response.status === 503 && errorData.error.includes("is currently loading")) {
                        if (retries > 0) {
                            const waitTime = errorData.estimated_time || 20;
                            updateStatus(`Model garam ho raha hai. ${Math.round(waitTime)} seconds me dobara try kiya jayega...`, false);
                            await new Promise(resolve => setTimeout(resolve, waitTime * 1000));
                            return generateImageWithRetry(prompt, modelId, retries - 1); // Retry
                        } else {
                            throw new Error("Model ko load karne mein bahut samay lag raha hai. Baad mein try karein.");
                        }
                    }
                    throw new Error(`API Error: ${errorData.error || response.statusText}`);
                }
                
                updateStatus("Image ban rahi hai...", false);
                const blob = await response.blob();
                
                if (blob.type.startsWith('image/')) {
                    displayImageInGallery(blob, prompt);
                    updateStatus("Image jaldi ban gayi!", false);
                } else {
                    throw new Error("API se image receive nahi hui.");
                }

            } catch (error) {
                console.error("Failed to generate image:", error);
                updateStatus(`Oops! Kuch galat ho gaya. ${error.message}`, true);
            } finally {
                setLoading(false);
            }
        }
        
        function displayImageInGallery(blob, prompt) {
            if (galleryPlaceholder) {
                galleryPlaceholder.style.display = 'none';
            }
            const imgUrl = URL.createObjectURL(blob);
            const img = document.createElement('img');
            img.src = imgUrl;
            img.alt = `AI generated image for: ${prompt}`;
            galleryGrid.prepend(img); // Prepend to show the latest first
        }

        function setLoading(isLoading) {
            generateBtn.disabled = isLoading;
            if (isLoading) {
                generateBtn.classList.add('loading');
            } else {
                generateBtn.classList.remove('loading');
            }
        }

        function updateStatus(message, isError = false) {
            statusMessage.textContent = message;
            statusMessage.style.color = isError ? '#e74c3c' : 'var(--glow-color)';
        }
    });
    </script>
</body>
</html>
